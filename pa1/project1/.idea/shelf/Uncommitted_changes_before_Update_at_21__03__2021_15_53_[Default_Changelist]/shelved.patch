Index: database/db.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import psycopg2\r\n\r\n\r\nclass DB:\r\n    def __init__(self):\r\n        self.conn = None\r\n        self.cur = None\r\n        self.connectDB()\r\n\r\n    # ------------------------------  CONNECT DB, DISCONNECT DB AND CREATE TABLES   ------------------------------\r\n    def connectDB(self):\r\n        try:\r\n            self.conn = psycopg2.connect(\r\n                database=\"crawler\",\r\n                host=\"localhost\",\r\n                user=\"postgres\",\r\n                password=\"password\"\r\n            )\r\n            self.cur = self.conn.cursor()\r\n        except (Exception, psycopg2.DatabaseError) as error:\r\n            print(error)\r\n\r\n    def disconnectDB(self):\r\n        if self.conn:\r\n            self.conn.close()\r\n        if self.cur:\r\n            self.cur.close()\r\n\r\n    def createTables(self):\r\n        code = open(\"crawldb.sql\", \"r\").read()\r\n        try:\r\n            self.cur.execute(code)\r\n            self.conn.commit()\r\n        except (Exception, psycopg2.DatabaseError):\r\n            self.conn.rollback()\r\n\r\n    # ------------------------------  INSERT FUNCTIONS  ------------------------------\r\n\r\n    def insertSite(self, domain=None, robots_content=None, sitemap_content=None):\r\n        sql = \"INSERT INTO crawldb.site(domain, robots_content, sitemap_content) VALUES (%s, %s, %s) RETURNING id\"\r\n        values = (domain, robots_content, sitemap_content)\r\n        try:\r\n            self.cur.execute(sql, values)\r\n            self.conn.commit()\r\n            result = self.cur.fetchone()\r\n            return result[0]\r\n        except psycopg2.IntegrityError as error:\r\n            raise error\r\n        except (Exception, psycopg2.DatabaseError):\r\n            self.conn.rollback()\r\n        return None\r\n\r\n    def insertImage(self, page_id=None, filename=None, content_type=None, data=None, accessed_time=None):\r\n        sql = \"INSERT INTO crawldb.image(page_id, filename, content_type, data, accessed_time) \" \\\r\n              \"VALUES (%s, %s, %s, %s, %s) RETURNING id\"\r\n        values = (page_id, filename, content_type, data, accessed_time)\r\n        try:\r\n            self.cur.execute(sql, values)\r\n            self.conn.commit()\r\n            result = self.cur.fetchone()\r\n            return result[0]\r\n        except psycopg2.IntegrityError as error:\r\n            raise error\r\n        except (Exception, psycopg2.DatabaseError):\r\n            self.conn.rollback()\r\n        return None\r\n\r\n    def insertPage(self, site_id=None, page_type_code=None, url=None, html_content=None, http_status_code=None,\r\n                   accessed_time=None):\r\n        if not page_type_code == 'DUPLICATE':\r\n            sql = \"INSERT INTO crawldb.page\" \\\r\n                  \"(site_id, page_type_code, url, html_content, http_status_code, accessed_time)\" \\\r\n                  \"VALUES (%s, %s, %s, %s, %s, %s) RETURNING id\"\r\n            values = (site_id, page_type_code, url, html_content, http_status_code, accessed_time)\r\n        else:\r\n            sql = \"INSERT INTO crawldb.page\" \\\r\n                  \"(site_id, page_type_code, url, http_status_code, accessed_time)\" \\\r\n                  \"VALUES (%s, %s, %s, %s, %s) RETURNING id\"\r\n            values = (site_id, page_type_code, url, http_status_code, accessed_time)\r\n        try:\r\n            self.cur.execute(sql, values)\r\n            self.conn.commit()\r\n            result = self.cur.fetchone()\r\n            return result[0]\r\n        except psycopg2.IntegrityError as error:\r\n            raise error\r\n        except (Exception, psycopg2.DatabaseError):\r\n            self.conn.rollback()\r\n        return None\r\n\r\n    def insertPageData(self, page_id=None, data_type_code=None, data=None):\r\n        sql = \"INSERT INTO crawldb.page_data(page_id, data_type_code, data) VALUES (%s, %s, %s)\"\r\n        values = (page_id, data_type_code, data)\r\n        try:\r\n            self.cur.execute(sql, values)\r\n            self.conn.commit()\r\n        except psycopg2.IntegrityError as error:\r\n            raise error\r\n        except (Exception, psycopg2.DatabaseError):\r\n            self.conn.rollback()\r\n\r\n    def insertLink(self, from_page, to_page):\r\n        sql = \"INSERT INTO crawldb.link(from_page, to_page) VALUES (%s, %s)\"\r\n        values = (from_page, to_page)\r\n        try:\r\n            self.cur.execute(sql, values)\r\n            self.conn.commit()\r\n        except psycopg2.IntegrityError as error:\r\n            raise error\r\n        except (Exception, psycopg2.DatabaseError):\r\n            self.conn.rollback()\r\n\r\n    # ------------------------------  SELECT FUNCTIONS  ------------------------------\r\n    def getPageByDomain(self, domain=None):\r\n        sql = \"SELECT id FROM crawldb.site WHERE domain = %s\"\r\n        values = (domain, )\r\n        try:\r\n            self.cur.execute(sql, values)\r\n            result = self.cur.fetchone()\r\n            if result:\r\n                return result\r\n        except psycopg2.IntegrityError as error:\r\n            raise error\r\n        except (Exception, psycopg2.DatabaseError):\r\n            self.conn.rollback()\r\n        return None\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/database/db.py b/database/db.py
--- a/database/db.py	(revision c568a109fee3e3395db0db3a007deda56654e94a)
+++ b/database/db.py	(date 1616332497598)
@@ -111,7 +111,7 @@
             self.conn.rollback()
 
     # ------------------------------  SELECT FUNCTIONS  ------------------------------
-    def getPageByDomain(self, domain=None):
+    def getSiteByDomain(self, domain=None):
         sql = "SELECT id FROM crawldb.site WHERE domain = %s"
         values = (domain, )
         try:
